###
# local.yaml data file
#
# This file allows you to override ANY of the default settings in 'default.yaml'.
# Simply copy this file into a "local.yaml" file in the same directory and get started!
# The file local.yaml is in .gitignore, so you won't accidentally commit it.
#
# Only the most commonly tweaked settings exist in this file. Though you can copy
# ANY of the settings from 'default.yaml' into this file and change them.
###

###
# default.yaml data file
#
# This is the default settings for 'vagrant-dspace'. If you wish to override or change
# these settings, you should copy this file into a "local.yaml" and modify whatever settings
# you see fit.
#
# By default, anytime Puppet is run, the /etc/puppet/hiera.yaml config file will load
# the settings in BOTH the "default.yaml" and "local.yaml". The settings in "local.yaml"
# will always override the default settings.
###

#-----------------------------
# Vagrant Settings
#-----------------------------
# Name of the VM to create in VirtualBox 
#(Also the name of the subfolder in ~/VirtualBox VMs/ where this VM is normally kept)
# (Changes to this setting require a 'vagrant destroy && vagrant up' to take effect)
vm_name    : 'dspace-dev'

# How much memory to provide to VirtualBox (in MB)
# Provide 2GB of memory by default
# (Changes to this setting require a 'vagrant reload' to take effect)
vm_memory  : 2048

# Maximum amount of host CPU which VirtualBox can use (in %)
# The example below would only let VirtualBox use up to 50% of host CPU
# (Changes to this setting require a 'vagrant reload' to take effect)
vm_max_cpu : 50

# Number of CPUs to allow VirtualBox to use (2 or more help the VirtualBox VM stay responsive during
# active development, by default we use 1 because we can't assume you have more
# but if you do have more than one core, you should probably set this to 2)
vb_cpus : 1

# Local IP address which will refer to this VM
# (Changes to this setting require a 'vagrant reload' to take effect)
ip_address : 192.168.50.2

# Local port which will access DSpace/Tomcat on this VM
# NOTE: if this port is already in use, Vagrant will use the next available port between 8081 and 8100
# (Changes to this setting require a 'vagrant reload' to take effect)
port       : 8080

# Local port which will access PostgreSQL on this VM
# This allows you to access the VM's DSpace database via pgAdminIII, or even debug code
# (via a locally installed IDE) while using this database.
# NOTE: if this port is already in use, Vagrant will use the next available port between 8081 and 8100
# (Changes to this setting require a 'vagrant reload' to take effect)
db_port    : 5432

# Whether to sync the ~/dspace-src/ (DSpace Source) to the host machine
# (under [vagrant-dspace]/dspace-src/).
#   * Setting to "true" means the local copy & VM copy are always in sync, and
#     you can use an IDE to edit your source code. BUT, the *first* 'vagrant up'
#     WILL take significantly longer (e.g. ~45mins instead of 10-15mins). 
#     Subsequent 'vagrant up' calls will use existing local source (until deleted).
#   * Setting to "false" is much more speedy, but you then can ONLY edit code
#     directly on the VM (i.e. no IDE integration)
# By default this is "false" to keep things speedy.
# (Changes to this setting require a 'vagrant destroy && vagrant up' to take effect)
sync_src_to_host : false

# Boot VM into GUI mode (login: vagrant, pwd: vagrant). Useful for debugging VM boot issues, etc.
# By default this is disabled as it can be memory hungry, and SSH is usually all you need.
# (Changes to this setting require a 'vagrant reload' to take effect)
vm_gui_mode     : false

#-----------------------------
# DSpace Source Code settings
#-----------------------------
# By default, we are always grabbing the DSpace Source code from GitHub
# We use the "master" branch by default.
# NOTE: While this defaults to using the SSH GitHub URL, if the SSH connection fails
# it will be dynamically changed into the HTTPS GitHub URL (https://github.com/[user]/[proj])
# You may also change "git_repo" to an HTTPS URL in order to force HTTPS at all times.
# (Changes to these settings require a 'vagrant destroy && vagrant up' to take effect)
dspace::git_repo          : 'https://github.com/CICBA/DSpace.git'
dspace::git_branch        : 'master'

#-------------------------------
# DSpace Administrative Account
#-------------------------------
# Initial Admin account to auto-create for DSpace
# After DSpace starts, you will be able to immediately login using the specified "admin_email" and "admin_passwd"
# (Changes to these settings require a 'vagrant provision' to take effect)
dspace::admin_firstname   : 'DEMOUSER'
dspace::admin_lastname    : 'SEDICI'
dspace::admin_email       : 'demouser@sedici.unlp.edu.ar'
dspace::admin_passwd      : 'admin_passwd'
dspace::admin_language    : 'es'

#-------------------------------
# DSpace Handle Prefix to use
#-------------------------------
# Note: 10673 is the handle_prefix assigned to demo.dspace.org
dspace::handle_prefix : 123456789

#-------------------------------
# DSpace custom registry file
#-------------------------------
# Load a custom registry file different to local-types.xml
#dspace::custom_registry_file : 'cic-types.xml'

#------------------------------
# DSpace Build/Install settings
#------------------------------
# Maven Defaults
#
# Always build/compile DSpace using "vagrant.properties"
# instead of the normal "build.properties" file
# IF you want to exclude particular webapps from building & installing, you can do so like:
# dspace::mvn_params: '-Denv=vagrant -P!dspace-lni,!dspace-rdf'
# (This setting is only used during a 'vagrant up')
#dspace::mvn_params        : '-Denv=vagrant -P!dspace-lni,!dspace-rdf'

# Tomcat Defaults
#
# Options to pass to Tomcat
# This IS customizable. Feel free to tweak memory settings, etc.
# (Changes to this setting require a 'vagrant provision' to take effect)
#dspace::catalina_opts     : '-Djava.awt.headless=true -Dfile.encoding=UTF-8 -Dcom.sun.management.jmxremote=true -Xmx1200m -Xms1200m -XX:MaxPermSize=256m -XX:+UseConcMarkSweepGC -Djava.security.egd=file:/dev/./urandom'
